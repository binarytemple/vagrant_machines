---
# Based heavily on the Ansible documentation on EC2:
# http://docs.ansible.com/ec2_module.html
  - name: Provision our EC2 nodes
    hosts: local
    connection: local
    gather_facts: False
    tags: provisioning
    vars_files:
     - vars.yml
    tasks:
     - name: boot basho_bench node 
       local_action:
        module: ec2
        region: "{{ bench_region }}" 
        group: "{{ bench_security_group }}"
        instance_type : "{{ bench_instance_type}}"
        image: "{{ bench_image }}"
        keypair: "{{ bench_keypair }}"
        wait: yes
        instance_tags:
            Name: installtype
            value: basho_bench
        exact_count: 1
        count_tag:
            Name: installtype
            value: basho_bench
       when: bench_enabled == True         
       register: ec2

     - name: debug those instance id's 
       debug: msg="{{item}}" 
       with_items: ec2.instances
       when: ec2 is defined and ec2.instances 

     - name: Wait for SSH to come up
       local_action: wait_for host={{ item.public_ip }} port=22 delay=1 timeout=320 state=started
       with_items: ec2.instances 
       when: ec2 is defined and ec2.instances 

     - name: Add the instances to the in-memory playbook, as the basho_bench group
       add_host: hostname="{{item.public_ip}}" groups=tag_value_basho_bench ansible_ssh_host="{{item.dns_name}}" ansible_ssh_port=22
       with_items: ec2.instances
       when: ec2 is defined and ec2.instances 


  - name: Gather ec2 facts
    sudo: yes # On EC2 nodes, this is automatically passwordless. 
    gather_facts: True  #We need to re-enable this, as we turned it off earlier.
    hosts: tag_value_riak
    tasks:
        #- action: debug msg=foo  # doesn't matter what you do, just that they were talked to previously.
        - name: Gather facts
          action: ec2_facts

  - name: With the newly provisioned EC2 node configure that thing
    hosts: tag_value_basho_bench
    # This uses the hosts that we put into the in-memory hosts repository with the add_host module.
    sudo: yes # On EC2 nodes, this is automatically passwordless. 
    gather_facts: True  #We need to re-enable this, as we turned it off earlier.
    vars_files:
     - vars.yml
    pre_tasks:
    - name: stat erl 
      stat: path=/usr/bin/erl
      register: usr_bin_erl
    tasks:     

  #    - action: debug msg="{{hostvars}}"
  #
  #    - name: install bench configs 
  #      sudo: no
  #      template: src=templates/william_hill/{{item}}.j2 dest=configs/{{item}} mode=0640
  #      with_items: 
  #      - wh_preload_1.config

    - name: add github key
      lineinfile: dest=/etc/ssh/ssh_known_hosts line='|1|KWI6LgcTkLS4a3J/jfyOaS6CIKE=|VIpECtP9TDwqZvzNIUSd01ZyKTI= ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==' owner=root state=present create=True

    - name: update apt
      action: apt state=installed update_cache=yes upgrade=yes     
      when: ansible_lsb.id == "Ubuntu"

    - name: install multiple packages
      action: apt name={{item}} state=installed 
      with_items:
      - vim 
      - netcat 
      - ngrep
      - tcpdump 
      - git
      - tmux
      - python-pycurl
      - python-pip
      - make
      - g++
      - erlang
      when: ansible_lsb.id == "Ubuntu"

    - name: checkout basho_bench repository 
      sudo: no
      action: git repo=git@github.com:basho/basho_bench.git dest=basho_bench

    - name: compile basho_bench 
      sudo: no
      action: shell chdir=basho_bench make
    
    - action: file dest=configs state=directory
      sudo: no

    - action: debug msg="{{hostvars}}"

    - name: install bench configs 
      sudo: no
      template: src=templates/william_hill/{{item}}.j2 dest=configs/{{item}} mode=0640
      with_items: 
          - wh_preload_1.config
          - wh_run_1.config
          - wh_run_2.config
