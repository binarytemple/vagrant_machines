---
# Based heavily on the Ansible documentation on EC2:
# http://docs.ansible.com/ec2_module.html
  - name: Provision our EC2 nodes
    hosts: local
    connection: local
    gather_facts: False
    tags: provisioning
    vars_files:
     - vars.yml
    tasks:
     - name: boot riak nodes
       local_action:
        module: ec2
        region: "{{ region }}" 
        group: "{{ security_group }}"
        instance_type : "{{ instance_type}}"
        image: "{{ image }}"
        keypair: "{{ keypair }}"
        user_data: "riak_node"
        wait: yes
        instance_tags:
            Name: installtype
            value: riak
        exact_count: "{{cluster_host_count}}"
        count_tag:
            Name: installtype
            value: riak
       register: ec2

     - name: debug those instance id's 
       debug: msg="{{item}}" 
       with_items: ec2.instances
       when: ec2 is defined and ec2.instances is defined

     - name: attach big volumes 
       local_action: ec2_vol instance="{{item.id}}" volume_size=5  region="{{region}}" iops="{{provisioned_iops}}"
       with_items: ec2.instances
       when: ec2_vol is not defined and ec2 is defined and ec2.instances is defined and attach_volumes is defined and provisioned_iops is defined

     - name: attach big volumes 
       local_action: ec2_vol instance="{{item.id}}" volume_size=5  region="{{region}}" 
       with_items: ec2.instances
       when: ec2_vol is not defined and ec2 is defined and ec2.instances is defined and attach_volumes is defined and provisioned_iops is not defined

     - name: debug those instance id's 
       debug: msg="{{ec2}}" 

     - name: Wait for SSH to come up
       local_action: wait_for host={{ item.public_ip }} port=22 delay=1 timeout=320 state=started
       with_items: ec2.instances 
       when: ec2 is defined and ec2.instances is defined and ec2.instances != None

     - name: Debug the names of the instances
       debug: msg="{{item.public_ip}}"
       with_items: ec2.instances
       when: ec2 is defined and ec2.instances is defined and ec2.instances != None

     - name: Add the instances to the in-memory playbook, as the riak group
       add_host: hostname="{{item.public_ip}}" groups=tag_value_riak ansible_ssh_host="{{item.dns_name}}" ansible_ssh_port=22
       with_items: ec2.instances
       when: ec2 is defined and ec2.instances is defined and ec2.instances != None

  - name: With the newly provisioned EC2 node configure that thing
    hosts: tag_value_riak
    # This uses the hosts that we put into the in-memory hosts repository with the add_host module.
    sudo: yes # On EC2 nodes, this is automatically passwordless. 
    gather_facts: True  #We need to re-enable this, as we turned it off earlier.
    vars_files:
     - vars.yml
    roles:
      - { role: basho.riak-common, tags: ["riak"]}
      - { role: binarytemple.riak2, tags: ["riak"], riak_version: "{{install_riak_version}}",  when: riak_custom_package is not defined }
      - { role: binarytemple.riak2, tags: ["riak"], riak_custom_package: "http://s3.amazonaws.com/downloads.basho.com/riak/2.0/2.0.0pre11/ubuntu/precise/riak_2.0.0pre11-1_amd64.deb", when: riak_custom_package is defined  }
