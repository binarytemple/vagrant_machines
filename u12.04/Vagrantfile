# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

    config.vm.box = "precise-server"

    # config.vm.forward_port 7990, 7991

    # Create a public network, which generally matched to bridged network.
    # Bridged networks make the machine appear as another physical device on
    # your network.
    # config.vm.network :public_network

    # If true, then any SSH connections made will enable agent forwarding.
    # Default value: false
    config.ssh.forward_agent = true

    # Provider-specific configuration so you can fine-tune various
    # backing providers for Vagrant. These expose provider-specific options.
    # Example for VirtualBox:
    config.vm.provider "virtualbox" do |vm|

        # Don't boot with headless mode
        vm.gui = false
        # Use VBoxManage to customize the VM. For example to change memory:
        vm.customize ["modifyvm", :id, "--memory", "1024"]
        vm.network :private_network, ip: "192.168.69.69"
        vm.network "public_network"
        #vm.share_folder("vagrant-root", "/vagrant", ".")

    end

    config.vm.provision "ansible" do |ansible|
        ansible.playbook = "../playbooks/base.yml"
    end

end

  #   puppet.manifest_file  = "site.pp"
  # end

  # Enable provisioning with chef solo, specifying a cookbooks path, roles
  # path, and data_bags path (all relative to this Vagrantfile), and adding
  # some recipes and/or roles.
  #
#   config.vm.provision :chef_solo do |chef|
#     chef.cookbooks_path = "../recipes/cookbooks"
#     chef.roles_path = "../recipes/roles"
#     chef.data_bags_path = "../recipes/data_bags"
#     chef.add_recipe "mysql"
#     chef.add_role "web"
#     # You may also specify custom JSON attributes:
#     chef.json = { :mysql_password => "foo" }
#   end

  # Enable provisioning with chef server, specifying the chef server URL,
  # and the path to the validation key (relative to this Vagrantfile).
  #
  # The Opscode Platform uses HTTPS. Substitute your organization for
  # ORGNAME in the URL and validation key.
  #
  # If you have your own Chef Server, use the appropriate URL, which may be
  # HTTP instead of HTTPS depending on your configuration. Also change the
  # validation key to validation.pem.
  #
  # config.vm.provision :chef_client do |chef|
  #   chef.chef_server_url = "https://api.opscode.com/organizations/ORGNAME"
  #   chef.validation_key_path = "ORGNAME-validator.pem"
  # end
  #
  # If you're using the Opscode platform, your validator client is
  # ORGNAME-validator, replacing ORGNAME with your organization name.
  #
  # If you have your own Chef Server, the default validation client name is
  # chef-validator, unless you changed the configuration.
  #
  #   chef.validation_client_name = "ORGNAME-validator"
#end
