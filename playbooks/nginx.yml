---
- include: base.yml
- hosts: all
  sudo: yes
  tasks:
  - name: install nginx
    action: apt name="{{item}}" state=installed
    with_items:
    - nginx-extras
    - nginx-common
    when: ansible_lsb.id == "Ubuntu"
  - name: make nginx directory 
    action: file path=/var/nginx mode=0755 owner=www-data state=directory
    notify:
    - restart nginx
  - name: copy up the local configs directory
    action: copy src=../remote/nginx/mms/configs dest="/var/nginx/" owner="www-data" group="root" mode=0755
    notify:
    - restart nginx
  - name: copy up the local images directory
    action: copy src=../remote/nginx/mms/images dest="/var/nginx/" owner="www-data" group="root" mode=0755
    notify:
    - restart nginx
  - name: copy up the local overlays directory
    action: copy src=../remote/nginx/mms/overlays dest="/var/nginx/" owner="www-data" group="root" mode=0755
    notify:
    - restart nginx
  - name: make the uploads directory
    action: file path=/var/nginx/uploads owner="www-data" group="root" mode=0755 state=directory
  - name: make the (pointofsale) uploads directory
    action: file path=/var/nginx/pointofsale owner="www-data" group="root" mode=0755 state=directory
  - name: make the (amazon) uploads directory
    action: file path=/var/nginx/amazon owner="www-data" group="root" mode=0755 state=directory
    notify:
    - restart nginx
  - name: run nginx with permissive put config
    action: template 
           src=../remote/etc/nginx-permissive-put.conf
           dest="/etc/nginx/sites-available/default"
           owner="root" 
           mode=0644
    notify:
    - restart nginx
  handlers:
    - name: restart nginx
      action: service name=nginx state=restarted
