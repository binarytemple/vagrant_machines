---
- hosts: all
  sudo: yes
  vars:
    stanchion_min_fileno: 4096
    riak_min_fileno: 4096
    riak_cs_min_fileno: 4096
  pre_tasks:
  - name: stat riak app.config 
    stat: path=/etc/riak/app.config
    register: etc_riak_app_config
  - name: stat riak_cs app.config 
    stat: path=/etc/riak-cs/app.config
    register: etc_riak_cs_app_config
  - name: stat stanchion 
    stat: path=/usr/sbin/stanchion 
    register: usr_sbin_stanchion
  tasks:
  - name: download stanchion
    action: get_url 
      url=http://s3.amazonaws.com/downloads.basho.com/stanchion/1.4/1.4.3/ubuntu/precise/stanchion_1.4.3-1_amd64.deb 
      sha256sum=eb4ca8ebafe8369da4f47fd714ddd9886cc31c4a942cb021203230859ce4b5e4
      dest=/tmp/stanchion.deb
    when: ansible_lsb.id == "Ubuntu" and usr_sbin_stanchion.stat.exists == false

  - name: download riak
    action: get_url 
      url=http://s3.amazonaws.com/downloads.basho.com/riak/1.4/1.4.8/ubuntu/precise/riak_1.4.8-1_amd64.deb 
      sha256sum=935846e3827bdba58c113f21596041d3f89bde3802e8833876ff009ca4235417
      dest=/tmp/riak.deb
    when: ansible_lsb.id == "Ubuntu" and etc_riak_app_config.stat.exists == false

  - name: install libssl0.9.x
    action: apt name="{{item}}" state=installed
    with_items:
    - libssl0.9.8
    when: ansible_lsb.id == "Ubuntu"

  - name: download riak cs
    action: get_url 
      url=http://s3.amazonaws.com/downloads.basho.com/riak-cs/1.4/1.4.5/ubuntu/precise/riak-cs_1.4.5-1_amd64.deb
      sha256sum=63d033e89fbccb412792a2ffb8428a15c3fc9a8deb5b3091024fddc7237e7ccc
      dest=/tmp/riak_cs.deb
    when: ansible_lsb.id == "Ubuntu" and etc_riak_cs_app_config.stat.exists == false

#   # We need to add the permissive configuration files
#   - name : cp /etc/riak/app.config 
#     action: template src=../remote/riak_cs_files/etc/default/j2 dest=/etc/default/riak mode=0644

  - action: template src=../remote/riak_cs_files/etc/default/riak.j2 dest=/etc/default/riak mode=0644
  - action: template src=../remote/riak_cs_files/etc/default/riak-cs.j2 dest=/etc/default/riak-cs mode=0644
  - action: template src=../remote/riak_cs_files/etc/default/stanchion.j2 dest=/etc/default/stanchion mode=0644

  - name: install riak 
    action : shell /usr/bin/dpkg --install /tmp/riak.deb
    when: ansible_lsb.id == "Ubuntu" and etc_riak_app_config.stat.exists == false

  - name: install riak_cs 
    action : shell /usr/bin/dpkg --install /tmp/riak_cs.deb
    when: ansible_lsb.id == "Ubuntu" and etc_riak_cs_app_config.stat.exists == false

  - name: install stanchion 
    action : shell /usr/bin/dpkg --install /tmp/stanchion.deb
    when: ansible_lsb.id == "Ubuntu" and usr_sbin_stanchion.stat.exists == false

  # We need to add the permissive configuration files
  - action: template src=../remote/riak_cs_files/etc/riak/app.config.j2 dest=/etc/riak/app.config mode=0644
    register: config_change

  - action: template src=../remote/riak_cs_files/etc/riak/vm.args.j2 dest=/etc/riak/vm.args mode=0644
    register: config_change

  - action: template src=../remote/riak_cs_files/etc/riak-cs/app.config.j2 dest=/etc/riak-cs/app.config mode=0644
    register: config_change

  - action: template src=../remote/riak_cs_files/etc/riak-cs/vm.args.j2 dest=/etc/riak-cs/vm.args mode=0644
    register: config_change

  - action: template src=../remote/riak_cs_files/etc/stanchion/app.config.j2 dest=/etc/stanchion/app.config mode=0644
    register: config_change

  - action: template src=../remote/riak_cs_files/etc/stanchion/vm.args.j2 dest=/etc/stanchion/vm.args mode=0644
    register: config_change

  - name: start riak service
    action: service name=riak state=restarted
    when: config_change|changed

  - action: shell /usr/sbin/riak ping
    register: riak_result
    until: riak_result.stdout.find("pong") != -1
    retries: 5
    delay: 10

  - name: start riak-cs service
    action: service name=riak-cs state=restarted
    when: config_change|changed

  - action: shell /usr/sbin/riak-cs ping
    register: riak_cs_result
    until: riak_cs_result.stdout.find("pong") != -1
    retries: 5
    delay: 10

  - name: start stanchion service
    action: service name=stanchion state=restarted
    when: config_change|changed

  - action: shell /usr/sbin/stanchion ping
    register: stanchion_result
    until:  stanchion_result.stdout.find("pong") != -1
    retries: 5
    delay: 10

#  Create the s3 admin user if the s3creds.txt file doesn't exist.

  - name: Check if s3creds.txt file exists
    stat: path=/home/vagrant/s3creds.txt
    register: check_s3creds_path

  - name: create the admin user (can repeat multiple times)
    action: uri 
        url=http://localhost:8080/riak-cs/user 
        method=POST 
        body='{"email":"admin27@admin.com","name":"admin27"}'
        HEADER_Content-Type=application/json
        status_code=201,409
        return_content=yes
    when: not check_s3creds_path.stat.exists  
    register: create_admin_result

  - name: echo the create_admin_result 
    action: debug msg=key_id {{ create_admin_result.json.key_id }}, id {{ create_admin_result.json.id }}, key_secret {{ create_admin_result.json.key_secret }}
    when: create_admin_result.has_key('json')

  - action: template src=../remote/riak_cs_files/homedir/s3creds.txt.j2 dest=/home/vagrant/s3creds.txt mode=0644
    when: create_admin_result.has_key('json')
